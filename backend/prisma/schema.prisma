// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                      String                  @id @default(cuid())
  profile_image_url       String?
  walletPublicKey         String                  @unique
  nonce                   String                  @default("")
  name                    String?
  createdAt               DateTime                @default(now())
  updatedAt               DateTime                @updatedAt
  modules                 Module[]
  APPTransactionHistory   AppTransactionHistory[]
  apitransactionHistories ApiTransactionHistory[]

  @@map("users")
}

model Module {
  id                      String                  @id @default(cuid())
  module_image_url        String?
  name                    String                  @unique
  description             String
  network                 String
  tags                    String[]
  key                     String?
  founder                 String?
  hash                    String?
  codelocation            String
  appurl                  String
  ipfs_cid                String
  deregistered            Boolean                 @default(false)
  createdAt               DateTime                @default(now())
  updatedAt               DateTime                @updatedAt
  userId                  String
  user                    User                    @relation(fields: [userId], references: [id])
  moduleCodes             ModuleCode[]
  apitransactionHistories ApiTransactionHistory[]

  @@map("modules")
}

model ModuleCode {
  id        String   @id @default(cuid())
  ipfs_cid  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  moduleId  String
  module    Module   @relation(fields: [moduleId], references: [id])

  @@map("module_codes")
}

model ApiTransactionHistory {
  id        String   @id @default(cuid())
  endpoint  String
  input     Json
  output    Json
  moduleId  String
  module    Module   @relation(fields: [moduleId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("api_transaction_histories")
}

model AppTransactionHistory {
  id                String   @id @default(cuid())
  moduleworking     Boolean
  description       String
  evidenceImage_url String
  modulename        String
  userId            String
  user              User     @relation(fields: [userId], references: [id])
  checkedByDOA      Boolean  @default(false)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("app_transaction_histories")
}
